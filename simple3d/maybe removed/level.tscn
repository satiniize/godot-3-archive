[gd_scene load_steps=46 format=2]

[ext_resource path="res://world_materials/green_planks/textures/green_rough_planks_rough_1k.jpg" type="Texture" id=1]
[ext_resource path="res://maybe removed/aerial_grass_rock_2k_jpg/aerial_grass_rock_diff_2k.jpg" type="Texture" id=2]
[ext_resource path="res://world_materials/concrete_slab/textures/concrete_floor_painted_diff_1k.jpg" type="Texture" id=3]
[ext_resource path="res://maybe removed/Untitled.jpg" type="Texture" id=4]
[ext_resource path="res://maybe removed/aerial_rocks_02_2k_jpg/aerial_rocks_02_diff_2k.jpg" type="Texture" id=5]
[ext_resource path="res://world_materials/green_planks/textures/green_rough_planks_diff_1k.jpg" type="Texture" id=6]
[ext_resource path="res://maybe removed/blend.jpg" type="Texture" id=7]
[ext_resource path="res://glass.tres" type="Material" id=8]
[ext_resource path="res://scenes/interactables/toilet/toilet.tscn" type="PackedScene" id=10]
[ext_resource path="res://scenes/interactables/table_for_two/table_for_two.tscn" type="PackedScene" id=11]
[ext_resource path="res://world_materials/floor_tile/textures/floor_tile.png" type="Texture" id=12]
[ext_resource path="res://world_materials/green_planks/textures/green_rough_planks_nor_1k.jpg" type="Texture" id=13]
[ext_resource path="res://world_materials/wall/wall.png" type="Texture" id=14]
[ext_resource path="res://world_materials/floor_tile/textures/bruh.png" type="Texture" id=15]



















[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,-1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,-1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}


vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = (1.8 - roughness_tex) * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.516
shader_param/metallic = 0.614
shader_param/roughness = 0.479
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 0, 0, 1, 0 )
shader_param/roughness_texture_channel = Plane( 0, 0, 1, 0 )
shader_param/uv1_blend_sharpness = 1.0
shader_param/uv1_scale = Vector3( 1.5, 1.5, 1.5 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 12 )
shader_param/texture_metallic = ExtResource( 15 )
shader_param/texture_roughness = ExtResource( 15 )

[sub_resource type="SpatialMaterial" id=6]
albedo_texture = ExtResource( 6 )
normal_enabled = true
normal_scale = 1.0
normal_texture = ExtResource( 13 )
uv1_triplanar = true

[sub_resource type="SpatialMaterial" id=7]
albedo_texture = ExtResource( 14 )
uv1_scale = Vector3( 0.3, 0.3, 0.3 )
uv1_offset = Vector3( 0, 1.28, 0 )
uv1_triplanar = true

[sub_resource type="SpatialMaterial" id=8]
albedo_texture = ExtResource( 3 )

[sub_resource type="SpatialMaterial" id=9]
albedo_texture = ExtResource( 6 )
roughness = 0.33
roughness_texture = ExtResource( 1 )
uv1_triplanar = true

[sub_resource type="VisualShaderNodeVectorOp" id=10]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 7 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeVectorOp" id=15]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 31

[sub_resource type="VisualShaderNodeTexture" id=17]
output_port_for_preview = 0
texture = ExtResource( 5 )

[sub_resource type="VisualShaderNodeVectorOp" id=18]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=19]

[sub_resource type="VisualShaderNodeTexture" id=20]
texture = ExtResource( 7 )

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "strength"

[sub_resource type="VisualShaderNodeTexture" id=23]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=25]

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="VisualShaderNodeVectorCompose" id=27]

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShader" id=31]
code = "shader_type spatial;
uniform sampler2D tex_vtx_2;
uniform float strength;
uniform sampler2D tex_vtx_11;
uniform float ScalarUniform;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_8;



void vertex() {
// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_vtx_2_read = texture(tex_vtx_2, n_out7p0.xy);
	vec3 n_out2p0 = tex_vtx_2_read.rgb;
	float n_out2p1 = tex_vtx_2_read.a;

// ScalarUniform:13
	float n_out13p0 = strength;

// Texture:11
	vec4 tex_vtx_11_read = texture(tex_vtx_11, UV.xy);
	vec3 n_out11p0 = tex_vtx_11_read.rgb;
	float n_out11p1 = tex_vtx_11_read.a;

// VectorOp:12
	vec3 n_out12p0 = vec3(n_out13p0) * n_out11p0;

// VectorOp:10
	vec3 n_out10p0 = n_out2p0 + n_out12p0;

// VectorDecompose:5
	float n_out5p0 = n_out10p0.x;
	float n_out5p1 = n_out10p0.y;
	float n_out5p2 = n_out10p0.z;

// ScalarUniform:9
	float n_out9p0 = ScalarUniform;

// ScalarOp:8
	float n_out8p0 = n_out5p2 * n_out9p0;

// VectorCompose:6
	float n_in6p0 = 0.00000;
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_in6p0, n_out8p0, n_in6p2);

// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorOp:4
	vec3 n_out4p0 = n_out6p0 + n_out3p0;

// Output:0
	VERTEX = n_out4p0;

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out3p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out3p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// VectorOp:6
	vec3 n_out6p0 = n_out2p0 * vec3(n_out5p2);

// ScalarFunc:7
	float n_out7p0 = 1.0 - n_out5p2;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, n_out3p0.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// VectorOp:9
	vec3 n_out9p0 = vec3(n_out7p0) * n_out8p0;

// VectorOp:10
	vec3 n_out10p0 = n_out6p0 + n_out9p0;

// Output:0
	ALBEDO = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -887.965, 192 )
nodes/vertex/0/position = Vector2( 700, 80 )
nodes/vertex/2/node = SubResource( 23 )
nodes/vertex/2/position = Vector2( -660, 60 )
nodes/vertex/3/node = SubResource( 24 )
nodes/vertex/3/position = Vector2( 340, 240 )
nodes/vertex/4/node = SubResource( 25 )
nodes/vertex/4/position = Vector2( 520, 160 )
nodes/vertex/5/node = SubResource( 26 )
nodes/vertex/5/position = Vector2( -100, 100 )
nodes/vertex/6/node = SubResource( 27 )
nodes/vertex/6/position = Vector2( 160, 100 )
nodes/vertex/7/node = SubResource( 28 )
nodes/vertex/7/position = Vector2( -800, 180 )
nodes/vertex/8/node = SubResource( 29 )
nodes/vertex/8/position = Vector2( 60, 220 )
nodes/vertex/9/node = SubResource( 30 )
nodes/vertex/9/position = Vector2( -200, 260 )
nodes/vertex/10/node = SubResource( 19 )
nodes/vertex/10/position = Vector2( -280, 140 )
nodes/vertex/11/node = SubResource( 20 )
nodes/vertex/11/position = Vector2( -780, 320 )
nodes/vertex/12/node = SubResource( 21 )
nodes/vertex/12/position = Vector2( -400, 360 )
nodes/vertex/13/node = SubResource( 22 )
nodes/vertex/13/position = Vector2( -580, 360 )
nodes/vertex/connections = PoolIntArray( 4, 0, 0, 0, 3, 0, 4, 1, 6, 0, 4, 0, 7, 0, 2, 0, 5, 2, 8, 0, 8, 0, 6, 1, 9, 0, 8, 1, 10, 0, 5, 0, 2, 0, 10, 0, 11, 0, 12, 1, 13, 0, 12, 0, 12, 0, 10, 1 )
nodes/fragment/0/position = Vector2( 860, 40 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( 140, 20 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -320, 120 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -60, 180 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( 120, 300 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( 380, 120 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( 300, 480 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( 20, 660 )
nodes/fragment/9/node = SubResource( 18 )
nodes/fragment/9/position = Vector2( 500, 520 )
nodes/fragment/10/node = SubResource( 10 )
nodes/fragment/10/position = Vector2( 620, 120 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 5, 0, 2, 0, 6, 0, 5, 2, 6, 1, 5, 2, 7, 0, 8, 0, 9, 1, 7, 0, 9, 0, 6, 0, 10, 0, 9, 0, 10, 1, 10, 0, 0, 0, 3, 0, 4, 0, 3, 0, 8, 0 )

[sub_resource type="ShaderMaterial" id=32]
shader = SubResource( 31 )
shader_param/strength = 0.603
shader_param/ScalarUniform = 13.113
shader_param/tex_frg_2 = ExtResource( 2 )

[sub_resource type="PlaneMesh" id=33]
material = SubResource( 32 )
size = Vector2( 128, 128 )
subdivide_width = 128
subdivide_depth = 128

[sub_resource type="NavigationMesh" id=34]

[node name="level" type="Spatial"]

[node name="building" type="Spatial" parent="."]

[node name="windows" type="CSGCombiner" parent="building"]
material_override = ExtResource( 8 )
use_collision = true

[node name="CSGBox4" type="CSGBox" parent="building/windows"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.2, 1.3, 4.1 )
use_collision = true
width = 9.4
height = 1.8
depth = 0.2

[node name="CSGBox5" type="CSGBox" parent="building/windows"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.9, 1.3, -4.1 )
use_collision = true
width = 6.0
height = 1.8
depth = 0.2

[node name="CSGBox6" type="CSGBox" parent="building/windows"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0999991, 3, -1.93715e-07 )
use_collision = true
width = 11.8
height = 0.2
depth = 5.0

[node name="floor" type="CSGBox" parent="building"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, -3 )
material_override = SubResource( 5 )
calculate_tangents = false
use_collision = true
width = 15.4
height = 0.2
depth = 14.4

[node name="CSGBox4" type="CSGBox" parent="building/floor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0.5, -4.3 )
operation = 2
width = 8.6
depth = 6.2

[node name="CSGBox5" type="CSGBox" parent="building/floor"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -8.5, 0.5, -4.3 )
operation = 2
width = 8.6
depth = 6.2

[node name="roof" type="CSGBox" parent="building"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3, -3 )
material_override = SubResource( 6 )
use_collision = true
width = 15.4
height = 0.2
depth = 14.4

[node name="CSGBox" type="CSGBox" parent="building/roof"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.1, 0, 3 )
operation = 2
width = 11.8
depth = 5.0

[node name="CSGBox2" type="CSGBox" parent="building/roof"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.5, 0, -4.3 )
operation = 2
width = 8.6
depth = 6.2

[node name="CSGBox3" type="CSGBox" parent="building/roof"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -8.5, 0, -4.3 )
operation = 2
width = 8.6
depth = 6.2

[node name="walls" type="CSGCombiner" parent="building"]
material_override = SubResource( 7 )
use_collision = true
collision_layer = 2
collision_mask = 0

[node name="south__wall" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 7.6, 0.4, 0 )
use_collision = true
width = 0.2
height = 5.0
depth = 8.4

[node name="CSGBox" type="CSGBox" parent="building/walls/south__wall"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.2, 0 )
operation = 2
height = 2.4

[node name="south__wall2" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0999998, 0.4, -7.2 )
use_collision = true
width = 0.2
height = 5.0
depth = 6.0

[node name="south__wall3" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -4.1, 0.4, -7.2 )
use_collision = true
width = 0.2
height = 5.0
depth = 6.0

[node name="north_wall" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -7.6, 0.4, 0 )
use_collision = true
width = 0.2
height = 5.0
depth = 8.4

[node name="west_wall" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0999994, 0.4, 4.1 )
use_collision = true
width = 15.2
height = 5.0
depth = 0.2

[node name="CSGBox3" type="CSGBox" parent="building/walls/west_wall"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.1, 0.9, 0 )
operation = 2
width = 9.4
height = 1.8
depth = 0.6

[node name="west_wall2" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2, 0.4, -10.1 )
use_collision = true
width = 4.2
height = 5.0
depth = 0.2

[node name="east_wall" type="CSGBox" parent="building/walls"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0999994, 0.4, -4.1 )
use_collision = true
width = 15.2
height = 5.0
depth = 0.2

[node name="CSGBox" type="CSGBox" parent="building/walls/east_wall"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.5, -0.5, 0 )
operation = 2
width = 1.2
height = 3.0
depth = 0.6

[node name="CSGBox2" type="CSGBox" parent="building/walls/east_wall"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.8, 0.9, 0 )
operation = 2
width = 6.0
height = 1.8
depth = 0.6

[node name="furniture" type="Spatial" parent="."]

[node name="primitive" type="Spatial" parent="furniture"]

[node name="CSGBox" type="CSGBox" parent="furniture/primitive"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -5.45, 0.1, 1.2 )
material_override = SubResource( 8 )
width = 4.0
height = 0.1
depth = 5.5

[node name="CSGBox" type="CSGBox" parent="furniture/primitive/CSGBox"]
operation = 2
width = 2.5
depth = 4.0

[node name="CSGBox2" type="CSGBox" parent="furniture/primitive/CSGBox"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.79, 0, -1.1 )
operation = 2
width = 0.92
depth = 4.0

[node name="main_table" type="CSGBox" parent="furniture/primitive"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.8, -0.5, 1.2 )
material_override = SubResource( 9 )
use_collision = true
width = 0.6
height = 1.2
depth = 5.4

[node name="main_table2" type="CSGBox" parent="furniture/primitive/main_table"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.3, 0, 0 )
material_override = SubResource( 9 )
use_collision = true
width = 0.6
height = 1.2
depth = 5.4

[node name="CSGBox3" type="CSGBox" parent="furniture/primitive/main_table/main_table2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.4, 0, 2.4 )
use_collision = true
width = 3.2
height = 1.2
depth = 0.6

[node name="CSGBox2" type="CSGBox" parent="furniture/primitive/main_table"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.9, 0, -2.4 )
use_collision = true
width = 3.4
height = 1.2
depth = 0.6

[node name="CSGBox3" type="CSGBox" parent="furniture/primitive/main_table/CSGBox2"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 0 )
operation = 2
use_collision = true
height = 1.4
depth = 1.0

[node name="custom" type="Spatial" parent="furniture"]

[node name="toilets" type="Spatial" parent="furniture/custom"]

[node name="toilet1" parent="furniture/custom/toilets" instance=ExtResource( 10 )]
transform = Transform( -1.62921e-07, 0, -1, 0, 1, 0, 1, 0, -1.62921e-07, -1, -0.9, -5.3 )

[node name="toilet2" parent="furniture/custom/toilets" instance=ExtResource( 10 )]
transform = Transform( -1.62921e-07, 0, -1, 0, 1, 0, 1, 0, -1.62921e-07, -1, -0.9, -7.2 )

[node name="toilet3" parent="furniture/custom/toilets" instance=ExtResource( 10 )]
transform = Transform( -1.62921e-07, 0, -1, 0, 1, 0, 1, 0, -1.62921e-07, -1, -0.9, -9.1 )

[node name="tables_n_chairs" type="Spatial" parent="furniture/custom"]

[node name="table_for_two1" parent="furniture/custom/tables_n_chairs" instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.44, -2.7 )

[node name="table_for_two2" parent="furniture/custom/tables_n_chairs" instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.7, -0.44, -2.7 )

[node name="table_for_two3" parent="furniture/custom/tables_n_chairs" instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.44, 2.7 )

[node name="table_for_two4" parent="furniture/custom/tables_n_chairs" instance=ExtResource( 11 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.7, -0.44, 2.7 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -18.1, 0 )
mesh = SubResource( 33 )
material/0 = null

[node name="Navigation" type="Navigation" parent="."]

[node name="NavigationMeshInstance" type="NavigationMeshInstance" parent="Navigation"]
navmesh = SubResource( 34 )
