[gd_resource type="ShaderMaterial" load_steps=23 format=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "uni2"

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 15

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 1

[sub_resource type="VisualShaderNodeTexture" id=7]
source = 1

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=9]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 1

[sub_resource type="VisualShaderNodeColorUniform" id=11]
uniform_name = "Color12"

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=13]

[sub_resource type="VisualShaderNodeVectorOp" id=14]

[sub_resource type="VisualShaderNodeScalarFunc" id=15]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=17]
uniform_name = "Color2"

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 15

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "uni1"

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 2

[sub_resource type="VisualShader" id=22]
code = "shader_type spatial;
render_mode unshaded;

uniform vec4 Color2 : hint_color;
uniform float uni2;
uniform vec4 Color12 : hint_color;
uniform float uni1;
uniform vec4 ColorUniform : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:29
	vec3 n_out29p0 = Color2.rgb;
	float n_out29p1 = Color2.a;

// ScalarUniform:13
	float n_out13p0 = uni2;

// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out3p0.xy, 0.0);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// ScalarOp:12
	float n_out12p0 = n_out13p0 * dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarFunc:14
	float n_out14p0 = round(n_out12p0);

// ScalarFunc:26
	float n_out26p0 = 1.0 - n_out14p0;

// VectorOp:28
	vec3 n_out28p0 = n_out29p0 * vec3(n_out26p0);

// ColorUniform:20
	vec3 n_out20p0 = Color12.rgb;
	float n_out20p1 = Color12.a;

// ScalarUniform:5
	float n_out5p0 = uni1;

// ScalarOp:6
	float n_out6p0 = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)) * n_out5p0;

// ScalarFunc:4
	float n_out4p0 = round(n_out6p0);

// ScalarFunc:10
	float n_out10p0 = 1.0 - n_out4p0;

// ScalarOp:11
	float n_out11p0 = n_out14p0 * n_out10p0;

// VectorOp:21
	vec3 n_out21p0 = n_out20p0 * vec3(n_out11p0);

// ColorUniform:19
	vec3 n_out19p0 = ColorUniform.rgb;
	float n_out19p1 = ColorUniform.a;

// VectorOp:18
	vec3 n_out18p0 = vec3(n_out4p0) * n_out19p0;

// VectorOp:22
	vec3 n_out22p0 = n_out21p0 + n_out18p0;

// VectorOp:25
	vec3 n_out25p0 = n_out28p0 + n_out22p0;

// Output:0
	ALBEDO = n_out25p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 236.2, -190 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 1380, 60 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 280, 100 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( 80, 140 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( 620, 180 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( 260, 320 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( 460, 220 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 780, 100 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 900, -40 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 460, -20 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 260, -80 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 620, 20 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 1480, 260 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 1500, 180 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 840, 240 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 640, 260 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 900, -161 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 1080, -101 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 1020, 140 )
nodes/fragment/25/node = SubResource( 14 )
nodes/fragment/25/position = Vector2( 1180, 140 )
nodes/fragment/26/node = SubResource( 15 )
nodes/fragment/26/position = Vector2( 620, -41 )
nodes/fragment/28/node = SubResource( 16 )
nodes/fragment/28/position = Vector2( 700, -160 )
nodes/fragment/29/node = SubResource( 17 )
nodes/fragment/29/position = Vector2( 520, -220 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 5, 0, 6, 1, 2, 0, 6, 0, 6, 0, 4, 0, 10, 0, 11, 1, 2, 0, 12, 1, 13, 0, 12, 0, 12, 0, 14, 0, 14, 0, 11, 0, 4, 0, 10, 0, 19, 0, 18, 1, 4, 0, 18, 0, 20, 0, 21, 0, 11, 0, 21, 1, 18, 0, 22, 1, 21, 0, 22, 0, 22, 0, 25, 1, 14, 0, 26, 0, 29, 0, 28, 0, 26, 0, 28, 1, 28, 0, 25, 0, 25, 0, 0, 0 )

[resource]
shader = SubResource( 22 )
shader_param/Color2 = Color( 0, 0, 0, 1 )
shader_param/uni2 = 0.634
shader_param/Color12 = Color( 1, 0, 0, 1 )
shader_param/uni1 = 0.17
shader_param/ColorUniform = Color( 1, 1, 1, 1 )
