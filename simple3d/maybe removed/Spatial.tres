[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Vector:4
	vec3 n_out4p0 = vec3(1.000000, 1.000000, 0.000000);

// Input:2
	vec3 n_out2p0 = vec3(SCREEN_UV, 0.0);

// VectorOp:5
//	vec3 n_out5p0 = n_out4p0 - n_out2p0;
	vec3 n_out5p0 = vec3(SCREEN_UV.x, 1.0 - SCREEN_UV.y, 0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out5p0.xy, 0.0);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Output:0
	ALBEDO = n_out3p0;

}

void light() {
// Output:0

}
"

[resource]
shader = SubResource( 1 )
